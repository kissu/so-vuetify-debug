/*!
 * devextreme-vue
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import ButtonGroup, { IOptions } from "devextreme/ui/button_group";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "buttonTemplate" | "disabled" | "elementAttr" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "items" | "keyExpr" | "onContentReady" | "onDisposing" | "onInitialized" | "onItemClick" | "onOptionChanged" | "onSelectionChanged" | "rtlEnabled" | "selectedItemKeys" | "selectedItems" | "selectionMode" | "stylingMode" | "tabIndex" | "visible" | "width">;
interface DxButtonGroup extends AccessibleOptions {
    readonly instance?: ButtonGroup;
}
declare const DxButtonGroup: import("vue/types/vue").ExtendedVue<VueType.default, unknown, unknown, {
    instance: ButtonGroup;
}, {
    accessKey: string;
    activeStateEnabled: boolean;
    buttonTemplate: unknown;
    disabled: boolean;
    elementAttr: any;
    focusStateEnabled: boolean;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    items: unknown[];
    keyExpr: TimerHandler;
    onContentReady: Function;
    onDisposing: Function;
    onInitialized: Function;
    onItemClick: Function;
    onOptionChanged: Function;
    onSelectionChanged: Function;
    rtlEnabled: boolean;
    selectedItemKeys: unknown[];
    selectedItems: unknown[];
    selectionMode: string;
    stylingMode: string;
    tabIndex: number;
    visible: boolean;
    width: string | number | Function;
}>;
declare const DxItem: any;
export default DxButtonGroup;
export { DxButtonGroup, DxItem };
