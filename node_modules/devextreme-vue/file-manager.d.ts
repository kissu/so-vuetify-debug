/*!
 * devextreme-vue
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import FileManager, { IOptions } from "devextreme/ui/file_manager";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "allowedFileExtensions" | "contextMenu" | "currentPath" | "customizeDetailColumns" | "customizeThumbnail" | "disabled" | "elementAttr" | "fileProvider" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "itemView" | "onContentReady" | "onCurrentDirectoryChanged" | "onDisposing" | "onInitialized" | "onOptionChanged" | "onSelectedFileOpened" | "permissions" | "rootFolderName" | "rtlEnabled" | "selectionMode" | "tabIndex" | "toolbar" | "upload" | "visible" | "width">;
interface DxFileManager extends AccessibleOptions {
    readonly instance?: FileManager;
}
declare const DxFileManager: import("vue/types/vue").ExtendedVue<VueType.default, unknown, unknown, {
    instance: FileManager;
}, {
    accessKey: string;
    activeStateEnabled: boolean;
    allowedFileExtensions: unknown[];
    contextMenu: any;
    currentPath: string;
    customizeDetailColumns: Function;
    customizeThumbnail: Function;
    disabled: boolean;
    elementAttr: any;
    fileProvider: any;
    focusStateEnabled: boolean;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    itemView: any;
    onContentReady: Function;
    onCurrentDirectoryChanged: Function;
    onDisposing: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onSelectedFileOpened: Function;
    permissions: any;
    rootFolderName: string;
    rtlEnabled: boolean;
    selectionMode: string;
    tabIndex: number;
    toolbar: any;
    upload: any;
    visible: boolean;
    width: string | number | Function;
}>;
declare const DxContextMenu: any;
declare const DxContextMenuItem: any;
declare const DxFileSelectionItem: any;
declare const DxItem: any;
declare const DxItemView: any;
declare const DxPermissions: any;
declare const DxToolbar: any;
declare const DxToolbarItem: any;
declare const DxUpload: any;
export default DxFileManager;
export { DxFileManager, DxContextMenu, DxContextMenuItem, DxFileSelectionItem, DxItem, DxItemView, DxPermissions, DxToolbar, DxToolbarItem, DxUpload };
