/*!
 * devextreme-vue
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import Box, { IOptions } from "devextreme/ui/box";
declare type AccessibleOptions = Pick<IOptions, "align" | "crossAlign" | "dataSource" | "direction" | "disabled" | "elementAttr" | "height" | "hoverStateEnabled" | "itemHoldTimeout" | "items" | "itemTemplate" | "onContentReady" | "onDisposing" | "onInitialized" | "onItemClick" | "onItemContextMenu" | "onItemHold" | "onItemRendered" | "onOptionChanged" | "rtlEnabled" | "visible" | "width">;
interface DxBox extends AccessibleOptions {
    readonly instance?: Box;
}
declare const DxBox: import("vue/types/vue").ExtendedVue<VueType.default, unknown, unknown, {
    instance: Box;
}, {
    align: string;
    crossAlign: string;
    dataSource: any;
    direction: string;
    disabled: boolean;
    elementAttr: any;
    height: string | number | Function;
    hoverStateEnabled: boolean;
    itemHoldTimeout: number;
    items: unknown[];
    itemTemplate: unknown;
    onContentReady: Function;
    onDisposing: Function;
    onInitialized: Function;
    onItemClick: TimerHandler;
    onItemContextMenu: Function;
    onItemHold: Function;
    onItemRendered: Function;
    onOptionChanged: Function;
    rtlEnabled: boolean;
    visible: boolean;
    width: string | number | Function;
}>;
declare const DxItem: any;
export default DxBox;
export { DxBox, DxItem };
