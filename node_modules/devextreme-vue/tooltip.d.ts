/*!
 * devextreme-vue
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import Tooltip, { IOptions } from "devextreme/ui/tooltip";
declare type AccessibleOptions = Pick<IOptions, "animation" | "closeOnOutsideClick" | "container" | "contentTemplate" | "deferRendering" | "disabled" | "elementAttr" | "height" | "hideEvent" | "hint" | "hoverStateEnabled" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "onContentReady" | "onDisposing" | "onHidden" | "onHiding" | "onInitialized" | "onOptionChanged" | "onShowing" | "onShown" | "position" | "rtlEnabled" | "shading" | "shadingColor" | "showEvent" | "target" | "visible" | "width">;
interface DxTooltip extends AccessibleOptions {
    readonly instance?: Tooltip;
}
declare const DxTooltip: import("vue/types/vue").ExtendedVue<VueType.default, unknown, unknown, {
    instance: Tooltip;
}, {
    animation: any;
    closeOnOutsideClick: boolean | Function;
    container: unknown;
    contentTemplate: unknown;
    deferRendering: boolean;
    disabled: boolean;
    elementAttr: any;
    height: string | number | Function;
    hideEvent: any;
    hint: string;
    hoverStateEnabled: boolean;
    maxHeight: string | number | Function;
    maxWidth: string | number | Function;
    minHeight: string | number | Function;
    minWidth: string | number | Function;
    onContentReady: Function;
    onDisposing: Function;
    onHidden: Function;
    onHiding: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onShowing: Function;
    onShown: Function;
    position: any;
    rtlEnabled: boolean;
    shading: boolean;
    shadingColor: string;
    showEvent: any;
    target: unknown;
    visible: boolean;
    width: string | number | Function;
}>;
declare const DxAnimation: any;
declare const DxAt: any;
declare const DxBoundaryOffset: any;
declare const DxCollision: any;
declare const DxHide: any;
declare const DxHideEvent: any;
declare const DxMy: any;
declare const DxOffset: any;
declare const DxPosition: any;
declare const DxShow: any;
declare const DxShowEvent: any;
export default DxTooltip;
export { DxTooltip, DxAnimation, DxAt, DxBoundaryOffset, DxCollision, DxHide, DxHideEvent, DxMy, DxOffset, DxPosition, DxShow, DxShowEvent };
