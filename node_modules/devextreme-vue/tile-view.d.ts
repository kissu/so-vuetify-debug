/*!
 * devextreme-vue
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import TileView, { IOptions } from "devextreme/ui/tile_view";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "baseItemHeight" | "baseItemWidth" | "dataSource" | "direction" | "disabled" | "elementAttr" | "focusStateEnabled" | "height" | "hint" | "hoverStateEnabled" | "itemHoldTimeout" | "itemMargin" | "items" | "itemTemplate" | "noDataText" | "onContentReady" | "onDisposing" | "onInitialized" | "onItemClick" | "onItemContextMenu" | "onItemHold" | "onItemRendered" | "onOptionChanged" | "rtlEnabled" | "showScrollbar" | "tabIndex" | "visible" | "width">;
interface DxTileView extends AccessibleOptions {
    readonly instance?: TileView;
}
declare const DxTileView: import("vue/types/vue").ExtendedVue<VueType.default, unknown, unknown, {
    instance: TileView;
}, {
    accessKey: string;
    activeStateEnabled: boolean;
    baseItemHeight: number;
    baseItemWidth: number;
    dataSource: any;
    direction: string;
    disabled: boolean;
    elementAttr: any;
    focusStateEnabled: boolean;
    height: string | number;
    hint: string;
    hoverStateEnabled: boolean;
    itemHoldTimeout: number;
    itemMargin: number;
    items: unknown[];
    itemTemplate: unknown;
    noDataText: string;
    onContentReady: Function;
    onDisposing: Function;
    onInitialized: Function;
    onItemClick: TimerHandler;
    onItemContextMenu: Function;
    onItemHold: Function;
    onItemRendered: Function;
    onOptionChanged: Function;
    rtlEnabled: boolean;
    showScrollbar: boolean;
    tabIndex: number;
    visible: boolean;
    width: string | number | Function;
}>;
declare const DxItem: any;
export default DxTileView;
export { DxTileView, DxItem };
