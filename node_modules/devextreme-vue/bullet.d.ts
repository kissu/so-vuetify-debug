/*!
 * devextreme-vue
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import Bullet, { IOptions } from "devextreme/viz/bullet";
declare type AccessibleOptions = Pick<IOptions, "color" | "disabled" | "elementAttr" | "endScaleValue" | "margin" | "onDisposing" | "onDrawn" | "onExported" | "onExporting" | "onFileSaving" | "onIncidentOccurred" | "onInitialized" | "onOptionChanged" | "onTooltipHidden" | "onTooltipShown" | "pathModified" | "rtlEnabled" | "showTarget" | "showZeroLevel" | "size" | "startScaleValue" | "target" | "targetColor" | "targetWidth" | "theme" | "tooltip" | "value">;
interface DxBullet extends AccessibleOptions {
    readonly instance?: Bullet;
}
declare const DxBullet: import("vue/types/vue").ExtendedVue<VueType.default, unknown, unknown, {
    instance: Bullet;
}, {
    color: string;
    disabled: boolean;
    elementAttr: any;
    endScaleValue: number;
    margin: any;
    onDisposing: Function;
    onDrawn: Function;
    onExported: Function;
    onExporting: Function;
    onFileSaving: Function;
    onIncidentOccurred: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onTooltipHidden: Function;
    onTooltipShown: Function;
    pathModified: boolean;
    rtlEnabled: boolean;
    showTarget: boolean;
    showZeroLevel: boolean;
    size: any;
    startScaleValue: number;
    target: number;
    targetColor: string;
    targetWidth: number;
    theme: string;
    tooltip: any;
    value: number;
}>;
declare const DxBorder: any;
declare const DxFont: any;
declare const DxFormat: any;
declare const DxMargin: any;
declare const DxShadow: any;
declare const DxSize: any;
declare const DxTooltip: any;
export default DxBullet;
export { DxBullet, DxBorder, DxFont, DxFormat, DxMargin, DxShadow, DxSize, DxTooltip };
