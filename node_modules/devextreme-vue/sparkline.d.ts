/*!
 * devextreme-vue
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import Sparkline, { IOptions } from "devextreme/viz/sparkline";
declare type AccessibleOptions = Pick<IOptions, "argumentField" | "barNegativeColor" | "barPositiveColor" | "dataSource" | "disabled" | "elementAttr" | "firstLastColor" | "ignoreEmptyPoints" | "lineColor" | "lineWidth" | "lossColor" | "margin" | "maxColor" | "maxValue" | "minColor" | "minValue" | "onDisposing" | "onDrawn" | "onExported" | "onExporting" | "onFileSaving" | "onIncidentOccurred" | "onInitialized" | "onOptionChanged" | "onTooltipHidden" | "onTooltipShown" | "pathModified" | "pointColor" | "pointSize" | "pointSymbol" | "rtlEnabled" | "showFirstLast" | "showMinMax" | "size" | "theme" | "tooltip" | "type" | "valueField" | "winColor" | "winlossThreshold">;
interface DxSparkline extends AccessibleOptions {
    readonly instance?: Sparkline;
}
declare const DxSparkline: import("vue/types/vue").ExtendedVue<VueType.default, unknown, unknown, {
    instance: Sparkline;
}, {
    argumentField: string;
    barNegativeColor: string;
    barPositiveColor: string;
    dataSource: any;
    disabled: boolean;
    elementAttr: any;
    firstLastColor: string;
    ignoreEmptyPoints: boolean;
    lineColor: string;
    lineWidth: number;
    lossColor: string;
    margin: any;
    maxColor: string;
    maxValue: number;
    minColor: string;
    minValue: number;
    onDisposing: Function;
    onDrawn: Function;
    onExported: Function;
    onExporting: Function;
    onFileSaving: Function;
    onIncidentOccurred: Function;
    onInitialized: Function;
    onOptionChanged: Function;
    onTooltipHidden: Function;
    onTooltipShown: Function;
    pathModified: boolean;
    pointColor: string;
    pointSize: number;
    pointSymbol: string;
    rtlEnabled: boolean;
    showFirstLast: boolean;
    showMinMax: boolean;
    size: any;
    theme: string;
    tooltip: any;
    type: string;
    valueField: string;
    winColor: string;
    winlossThreshold: number;
}>;
declare const DxBorder: any;
declare const DxFont: any;
declare const DxFormat: any;
declare const DxMargin: any;
declare const DxShadow: any;
declare const DxSize: any;
declare const DxTooltip: any;
export default DxSparkline;
export { DxSparkline, DxBorder, DxFont, DxFormat, DxMargin, DxShadow, DxSize, DxTooltip };
