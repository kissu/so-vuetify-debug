/*!
 * devextreme-vue
 * Version: 19.2.5
 * Build date: Mon Dec 16 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import Diagram, { IOptions } from "devextreme/ui/diagram";
declare type AccessibleOptions = Pick<IOptions, "accessKey" | "activeStateEnabled" | "autoZoom" | "contextMenu" | "customShapes" | "disabled" | "edges" | "elementAttr" | "export" | "focusStateEnabled" | "fullScreen" | "gridSize" | "height" | "hint" | "hoverStateEnabled" | "nodes" | "onContentReady" | "onDataChanged" | "onDisposing" | "onInitialized" | "onItemClick" | "onItemDblClick" | "onOptionChanged" | "onSelectionChanged" | "pageColor" | "pageOrientation" | "pageSize" | "propertiesPanel" | "readOnly" | "rtlEnabled" | "showGrid" | "simpleView" | "snapToGrid" | "tabIndex" | "toolbar" | "toolbox" | "units" | "viewUnits" | "visible" | "width" | "zoomLevel">;
interface DxDiagram extends AccessibleOptions {
    readonly instance?: Diagram;
}
declare const DxDiagram: import("vue/types/vue").ExtendedVue<VueType.default, unknown, unknown, {
    instance: Diagram;
}, {
    accessKey: string;
    activeStateEnabled: boolean;
    autoZoom: string;
    contextMenu: any;
    customShapes: unknown[];
    disabled: boolean;
    edges: any;
    elementAttr: any;
    export: any;
    focusStateEnabled: boolean;
    fullScreen: boolean;
    gridSize: any;
    height: string | number | Function;
    hint: string;
    hoverStateEnabled: boolean;
    nodes: any;
    onContentReady: Function;
    onDataChanged: Function;
    onDisposing: Function;
    onInitialized: Function;
    onItemClick: Function;
    onItemDblClick: Function;
    onOptionChanged: Function;
    onSelectionChanged: Function;
    pageColor: string;
    pageOrientation: string;
    pageSize: any;
    propertiesPanel: any;
    readOnly: boolean;
    rtlEnabled: boolean;
    showGrid: boolean;
    simpleView: boolean;
    snapToGrid: boolean;
    tabIndex: number;
    toolbar: any;
    toolbox: any;
    units: string;
    viewUnits: string;
    visible: boolean;
    width: string | number | Function;
    zoomLevel: any;
}>;
declare const DxAutoLayout: any;
declare const DxConnectionPoint: any;
declare const DxContextMenu: any;
declare const DxCustomShape: any;
declare const DxEdges: any;
declare const DxExport: any;
declare const DxGridSize: any;
declare const DxGroup: any;
declare const DxItem: any;
declare const DxNodes: any;
declare const DxPageSize: any;
declare const DxPropertiesPanel: any;
declare const DxPropertiesPanelGroup: any;
declare const DxToolbar: any;
declare const DxToolbox: any;
declare const DxToolboxGroup: any;
declare const DxZoomLevel: any;
export default DxDiagram;
export { DxDiagram, DxAutoLayout, DxConnectionPoint, DxContextMenu, DxCustomShape, DxEdges, DxExport, DxGridSize, DxGroup, DxItem, DxNodes, DxPageSize, DxPropertiesPanel, DxPropertiesPanelGroup, DxToolbar, DxToolbox, DxToolboxGroup, DxZoomLevel };
